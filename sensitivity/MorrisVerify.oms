val inputA = Val[Double]
val inputB = Val[Double]
val inputC = Val[Double]
val inputD = Val[Double]
val inputE = Val[Double]

val outputX = Val[Double]
val outputY = Val[Double]
val outputZ = Val[Double]

val testFunction = ScalaTask(
    """val outputX = inputB*2 + inputC*3 - scala.math.pow(inputD,2) + scala.math.pow(inputE,3)
    val outputY = inputA*10 + inputB*inputC*2 + inputB*inputC*inputD*3
    val outputZ = inputA
    """
    ) set (
  inputs += (inputA, inputB, inputC, inputD, inputE),
  outputs += (outputX, outputY, outputZ)
)


val envLocal = LocalEnvironment(4)

val storeSimuCSV = AppendToCSVFileHook(workDirectory / "results_verify" / "simu.csv")

val sensi = SensitivityMorris(
    evaluation = testFunction on envLocal hook storeSimuCSV,
    inputs = Seq(inputA in (0.0, 10.0), 
                inputB in (0.0, 10.0),
                inputC in (0.0, 10.0),
                inputD in (0.0, 10.0),
                inputE in (0.0, 10.0)
                ),
    outputs = Seq(outputX, outputY, outputZ),
    repetitions = 10,
    levels = 5,
    verbose = true
    ) 

val storeSensitivityCSV = AppendToCSVFileHook(workDirectory / "results_verify" / "sensitivity.csv")


(sensi hook storeSensitivityCSV) 

