val kFold  = Val[Int]
val images = Val[Array[File]]
val folder = Val[File]
val folders = folder.toArray

val nbTrees   = Val[Int]
val treeDepth = Val[Int]

val fileExploration = 
  ExplorationTask(
    (kFold in (0 until 10)) x
    (images is ListFilesDomain(inputDirectory, filter = ".*\\.jpg").shuffle)
  )
  
val copy = 
  ScalaTask("""
    |val folder = newDir("images")
    |images.zipWithIndex.foreach { case (image, id) => image copy (folder / (id + ".jpg")) }
    |""".stripMargin) set ( 
    name := "copy",
    inputs += images,
    outputs += folder  
  )

val parameterExploration = 
  ExplorationTask(
    (nbTrees in (5 to 25 by 5)) x
    (treeDepth in (5 to 21 by 3))
  ) set (
    inputs += folders,
    outputs += folders
  )

val folderExploration = 
  ExplorationTask(folder in folders) set (
    inputs += (nbTrees, treeDepth),
    outputs += (nbTrees, treeDepth)
  )
  
val learning = 
  ScalaTask("""println(s"$folder $nbTrees $treeDepth")""") set ( 
    name := "learning",
    inputs += (folder, nbTrees, treeDepth) 
  )
 
(fileExploration -< copy >- parameterExploration -< folderExploration -< learning)
