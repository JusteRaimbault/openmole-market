
// Declare the variable
val numberOfPreys = Val[Int]
val numberOfPreysAvg = Val[Double]
val nbPreysInit = Val[Int]
val seed = Val[Int]

// Gama task
// The first argument is the gaml
// The second argument of the GamaTask is the gama experiment name
// The third argument is the number of steps
val gama = 
  GamaTask(workDirectory / "predatorPrey.gaml", "prey_predatorExp", maxStep = 10) set (
    gamaInputs += (nbPreysInit, "nb_preys_init"),
    gamaSeed := seed,
    gamaOutputs += ("nb_preys", numberOfPreys)
  )
  
val average = 
  ScalaTask("val numberOfPreysAvg = numberOfPreys.map(_.toDouble).average") set (
    inputs += numberOfPreys.toArray,
    outputs += numberOfPreysAvg
  )

val csvHook = CSVHook(workDirectory / "result.csv", nbPreysInit, numberOfPreysAvg)

DirectSampling(
  evaluation = Replication(gama, seed, 10, aggregation = average) hook csvHook,
  sampling = nbPreysInit in (0 to 200 by 10)
)
